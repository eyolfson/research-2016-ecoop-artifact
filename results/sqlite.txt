    #0 0x56238c in sqlite3VtabLock /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:116885:14
    #1 0x560298 in sqlite3VdbeChangeP4 /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:67583:5
    #2 0x55f9ec in sqlite3VdbeAddOp4 /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:66952:3
    #3 0x5f7e78 in sqlite3Insert /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:102752:7
    #4 0x63bfd7 in yy_reduce /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:128733:3
    #5 0x637b7c in sqlite3Parser /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:129503:7
    #6 0x5c66f4 in sqlite3RunParser /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:130337:9
    #7 0x6b6cc4 in sqlite3Prepare /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:108370:5
    #8 0x60c738 in sqlite3LockAndPrepare /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:108465:8
    #9 0x5fdbe9 in sqlite3_prepare_v2 /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/sqlite3.c:108541:8
    #10 0x4f74fe in dbPrepare /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/src/tclsqlite.c:1071:10
    #11 0x4f5e7b in dbPrepareAndBind /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/src/tclsqlite.c:1145:20
    #12 0x4f14ff in dbEvalStep /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/src/tclsqlite.c:1420:12
    #13 0x4eb4ee in DbObjCmd /home/jon/software/dynamic-immutability-check/experiments/sqlite/src/sqlite-src-3090200/src/tclsqlite.c:2286:28
    #14 0x7f9514edf6f6 in TclNRRunCallbacks (/usr/lib/libtcl8.6.so+0x436f6)
    #15 0x7f9514f82091 in SlaveEval (/usr/lib/libtcl8.6.so+0xe6091)
    #16 0x7f9514f848c6 in NRInterpCmd (/usr/lib/libtcl8.6.so+0xe88c6)
    #17 0x7f9514edf6f6 in TclNRRunCallbacks (/usr/lib/libtcl8.6.so+0x436f6)
    #18 0x7f9514efb7b4 in Tcl_TimeObjCmd (/usr/lib/libtcl8.6.so+0x5f7b4)
    #19 0x7f9514edf6f6 in TclNRRunCallbacks (/usr/lib/libtcl8.6.so+0x436f6)
    #20 0x7f9514ee1724 in TclEvalEx (/usr/lib/libtcl8.6.so+0x45724)
    #21 0x7f9514f9a41f in Tcl_FSEvalFileEx (/usr/lib/libtcl8.6.so+0xfe41f)
    #22 0x7f9514f9a536 in Tcl_EvalFile (/usr/lib/libtcl8.6.so+0xfe536)

SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){
    sqlite3VtabLock((VTable *)zP4);

SQLITE_PRIVATE void sqlite3VtabLock(VTable *pVTab){
  pVTab->nRef++;
}





SQLITE_PRIVATE void sqlite3KeyInfoUnref(KeyInfo *p){
  if( p ){
    assert( p->nRef>0 );
    p->nRef--;  // 109656
    if( p->nRef==0 ) sqlite3DbFree(0, p);
  }
}

static void freeP4(sqlite3 *db, int p4type, void *p4){
        if( db->pnBytesFreed==0 ) sqlite3KeyInfoUnref((KeyInfo*)p4);

SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){
  Op *pOp;
  sqlite3 *db;
  assert( p!=0 );
  db = p->db;
  assert( p->magic==VDBE_MAGIC_INIT );
  if( p->aOp==0 || db->mallocFailed ){
    if( n!=P4_VTAB ){
      freeP4(db, n, (void*)*(char**)&zP4);
